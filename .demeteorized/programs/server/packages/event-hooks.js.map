{"version":3,"file":"/packages/event-hooks.js","sources":["event-hooks/server.js","event-hooks/common.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,kC;AACA,sB;AACA,kC;;AAEA,S;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,gC;AACA,E;;;AAGA,kC;AACA,wB;AACA,kC;;AAEA,gB;AACA,oC;AACA,mC;AACA,uC;AACA,M;AACA,oC;AACA,mC;AACA,uC;AACA,M;AACA,uC;AACA,sC;AACA,0C;AACA,M;AACA,mC;AACA,kC;AACA,sC;AACA,M;AACA,0C;AACA,mC;AACA,kC;AACA,K;AACA,G;;;AAGA,kC;AACA,yB;AACA,kC;;AAEA,+C;AACA,c;;AAEA,yB;AACA,6E;AACA,kC;AACA,gD;;AAEA,uC;AACA,qC;AACA,mE;AACA,S;AACA,K;AACA,G;;AAEA,oC;AACA,4B;AACA,mD;AACA,+D;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;ACnEA,iD;AACA,mD;AACA,yF","sourcesContent":["//////////////////////////////////\n//= SETUP HOOKS OBJECT\n//////////////////////////////////\n\nHooks = {\n    onLoseFocus:    function(){},\n    onGainFocus:    function(){},\n    onCloseSession: function(){},\n    onLoggedIn:     function(){},\n    onLoggedOut:    function(){},\n    onCreateUser:   function(){},\n    onDeleteUser:   function(){}\n};\n\n\n//////////////////////////////////\n//= SETUP METEOR METHODS\n//////////////////////////////////\n\nMeteor.methods({\n    eventsOnLoseFocus: function () {\n        // Fire the loseFocus event\n        Hooks.onLoseFocus(this.userId);\n    },\n    eventsOnGainFocus: function () {\n        // Fire the gainFocus event\n        Hooks.onGainFocus(this.userId);\n    },\n    eventsOnCloseSession: function () {\n        // Fire the closeSession event\n        Hooks.onCloseSession(this.userId);\n    },\n    eventsOnLoggedIn: function () {\n        // Fire the loggedIn event\n        Hooks.onLoggedIn(this.userId);\n    },\n    eventsOnLoggedOut: function (userId) {\n        // Fire the loggedOut event\n        Hooks.onLoggedOut(userId);\n    }\n});\n\n\n//////////////////////////////////\n//= SETUP USER MONITORING\n//////////////////////////////////\n\nvar currentUsers = Meteor.users.find().count();\nvar userCount;\n\n// Begin monitoring users\nMeteor.users.find({}, { limit: 1, sort: { createdAt: -1 } }).observeChanges({\n    added: function (id, fields) {\n        userCount = Meteor.users.find().count();\n\n        if (userCount > currentUsers) {\n            currentUsers = userCount;\n            Hooks.onCreateUser(id); // Fire the event on the server\n        }\n    }\n});\n\nMeteor.users.find().observeChanges({\n    removed: function (id) {\n        currentUsers = Meteor.users.find().count();\n        Hooks.onDeleteUser(id); // Fire the event on the server\n    }\n});\n","// We define this collection as a hack-ish way of\n// triggering updates on the client from the server\nEventHooksMonitoringCollection = new Meteor.Collection('eventHooksMonitoringCollection');"]}